apiVersion: v1
kind: Namespace
metadata:
  name: awx
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awxs.awx.ansible.com
spec:
  group: awx.ansible.com
  versions:
  - name: v1beta1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
  scope: Namespaced
  names:
    plural: awxs
    singular: awx
    kind: AWX
---
apiVersion: v1
kind: Secret
metadata:
  name: awx-admin-password
  namespace: awx
type: Opaque
stringData:
  password: admin
---
apiVersion: v1
kind: Secret
metadata:
  name: awx-postgres-configuration
  namespace: awx
type: Opaque
stringData:
  host: awx-postgres-15
  port: "5432"
  database: awx
  username: awx
  password: awx
  type: managed
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: awx-postgres-15-volume
spec:
  capacity:
    storage: 8Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: awx-postgres-volume
  hostPath:
    path: /opt/local-path-provisioner/awx-postgres
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: awx-projects-volume
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: awx-projects-volume
  hostPath:
    path: /opt/local-path-provisioner/awx-projects
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: awx-projects-claim
  namespace: awx
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 2Gi
  storageClassName: awx-projects-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: awx-operator
    app.kubernetes.io/name: awx-operator
    app.kubernetes.io/part-of: awx-operator
  name: awx-operator-controller-manager
  namespace: awx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: awx-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: awx-operator
    spec:
      containers:
      - args:
        - --leader-elect
        - --leader-election-id=awx-operator
        env:
        - name: ANSIBLE_GATHERING
          value: explicit
        - name: ANSIBLE_DEBUG_LOGS
          value: "false"
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/ansible/awx-operator:2.19.1
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 6789
          initialDelaySeconds: 15
          periodSeconds: 20
        name: awx-manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 6789
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 1000m
            memory: 768Mi
          requests:
            cpu: 100m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: awx-operator-controller-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: awx-operator
    app.kubernetes.io/name: awx-operator
    app.kubernetes.io/part-of: awx-operator
  name: awx-operator-controller-manager
  namespace: awx
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: awx-operator
    app.kubernetes.io/name: awx-operator
    app.kubernetes.io/part-of: awx-operator
  name: awx-operator-awx-manager-role
  namespace: awx
rules:
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  - routes/custom-host
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - services/finalizers
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resourceNames:
  - awx-operator
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - replicasets
  - deployments
  verbs:
  - get
- apiGroups:
  - awx.ansible.com
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: awx-operator
    app.kubernetes.io/name: awx-operator
    app.kubernetes.io/part-of: awx-operator
  name: awx-operator-awx-manager-rolebinding
  namespace: awx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: awx-operator-awx-manager-role
subjects:
- kind: ServiceAccount
  name: awx-operator-controller-manager
  namespace: awx
---
apiVersion: awx.ansible.com/v1beta1
kind: AWX
metadata:
  name: awx
  namespace: awx
spec:
  service_type: clusterip
  projects_persistence: true
  projects_storage_access_mode: ReadWriteOnce
  projects_storage_class: awx-projects-volume
  projects_storage_size: 2Gi
  projects_existing_claim: awx-projects-claim
  postgres_configuration_secret: awx-postgres-configuration
  postgres_storage_class: awx-postgres-volume
  postgres_storage_requirements:
    requests:
      storage: 8Gi
  admin_user: admin
  admin_password_secret: awx-admin-password
  hostname: awx.elam.sh
  ingress_type: none
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: awx-ingress
  namespace: awx
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
spec:
  ingressClassName: nginx
  rules:
  - host: awx.elam.sh
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: awx-service
            port:
              number: 80