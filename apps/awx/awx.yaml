apiVersion: v1
kind: Namespace
metadata:
  name: awx
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: awxs.awx.ansible.com
spec:
  group: awx.ansible.com
  versions:
  - name: v1beta1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              hostname:
                type: string
              admin_user:
                type: string
              admin_password_secret:
                type: string
              postgres_configuration_secret:
                type: string
              redis_configuration_secret:
                type: string
              service_type:
                type: string
              ingress_type:
                type: string
              postgres_storage_class:
                type: string
              postgres_storage_requirements:
                type: object
              projects_persistence:
                type: boolean
              projects_storage_class:
                type: string
              projects_storage_size:
                type: string
          status:
            type: object
  scope: Namespaced
  names:
    plural: awxs
    singular: awx
    kind: AWX
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: awx-operator
  namespace: awx
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: awx-operator
rules:
- apiGroups: [""]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["apps"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["extensions"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["networking.k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["awx.ansible.com"]
  resources: ["*"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: awx-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: awx-operator
subjects:
- kind: ServiceAccount
  name: awx-operator
  namespace: awx
---
apiVersion: v1
kind: Secret
metadata:
  name: awx-admin-password
  namespace: awx
type: Opaque
stringData:
  password: admin
---
apiVersion: v1
kind: Secret
metadata:
  name: awx-postgres-configuration
  namespace: awx
type: Opaque
stringData:
  host: awx-postgres
  port: "5432"
  database: awx
  username: awx
  password: awxpass
  sslmode: prefer
  type: managed
---
apiVersion: v1
kind: Secret
metadata:
  name: awx-redis-configuration
  namespace: awx
type: Opaque
stringData:
  host: awx-redis
  port: "6379"
  password: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: awx-operator
  namespace: awx
spec:
  replicas: 1
  selector:
    matchLabels:
      name: awx-operator
  template:
    metadata:
      labels:
        name: awx-operator
    spec:
      serviceAccountName: awx-operator
      containers:
      - name: awx-operator
        image: quay.io/ansible/awx-operator:2.7.2
        env:
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OPERATOR_NAME
          value: "awx-operator"
        - name: ANSIBLE_GATHERING
          value: explicit
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 256Mi
---
apiVersion: awx.ansible.com/v1beta1
kind: AWX
metadata:
  name: awx
  namespace: awx
spec:
  hostname: awx.elam.sh
  admin_user: admin
  admin_password_secret: awx-admin-password
  postgres_configuration_secret: awx-postgres-configuration
  redis_configuration_secret: awx-redis-configuration
  service_type: ClusterIP
  ingress_type: none
  postgres_storage_class: local-path
  postgres_storage_requirements:
    requests:
      storage: 8Gi
  projects_persistence: true
  projects_storage_class: local-path
  projects_storage_size: 8Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: awx
  namespace: awx
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
spec:
  ingressClassName: nginx
  rules:
  - host: awx.elam.sh
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: awx-service
            port:
              number: 80