apiVersion: v1
kind: Namespace
metadata:
  name: awx
---
apiVersion: v1
kind: Secret
metadata:
  name: awx-admin-password
  namespace: awx
type: Opaque
stringData:
  password: admin
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-13-awx-postgres-13-0
  namespace: awx
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 8Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: awx-projects-claim
  namespace: awx
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 8Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: awx-postgres-configuration
  namespace: awx
data:
  host: awx-postgres-13
  port: "5432"
  database: awx
  username: awx
  password: awxpass
  sslmode: prefer
  type: managed
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: awx-postgres-13
  namespace: awx
  labels:
    app.kubernetes.io/name: postgres-13
    app.kubernetes.io/instance: awx-postgres-13
    app.kubernetes.io/component: database
    app.kubernetes.io/version: "13"
    app.kubernetes.io/part-of: awx
spec:
  serviceName: awx-postgres-13
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres-13
      app.kubernetes.io/instance: awx-postgres-13
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres-13
        app.kubernetes.io/instance: awx-postgres-13
    spec:
      containers:
      - name: postgres
        image: postgres:13
        env:
        - name: POSTGRES_DB
          value: awx
        - name: POSTGRES_USER
          value: awx
        - name: POSTGRES_PASSWORD
          value: awxpass
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 256Mi
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: local-path
      resources:
        requests:
          storage: 8Gi
---
apiVersion: v1
kind: Service
metadata:
  name: awx-postgres-13
  namespace: awx
  labels:
    app.kubernetes.io/name: postgres-13
    app.kubernetes.io/instance: awx-postgres-13
spec:
  selector:
    app.kubernetes.io/name: postgres-13
    app.kubernetes.io/instance: awx-postgres-13
  ports:
  - port: 5432
    targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: awx-redis
  namespace: awx
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: awx-redis
    app.kubernetes.io/component: redis
    app.kubernetes.io/part-of: awx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: awx-redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/instance: awx-redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        args: ["redis-server", "--save", "", "--appendonly", "no"]
        ports:
        - containerPort: 6379
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: awx-redis
  namespace: awx
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: awx-redis
spec:
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: awx-redis
  ports:
  - port: 6379
    targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: awx-web
  namespace: awx
  labels:
    app.kubernetes.io/name: awx-web
    app.kubernetes.io/instance: awx
    app.kubernetes.io/component: awx
    app.kubernetes.io/part-of: awx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: awx-web
      app.kubernetes.io/instance: awx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: awx-web
        app.kubernetes.io/instance: awx
      annotations:
        configmap/hash: "awx-config-v1"
    spec:
      initContainers:
      - name: init-database
        image: quay.io/ansible/awx:23.5.1
        command: ['sh', '-c']
        args:
        - |
          awx-manage migrate --noinput
          echo "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(username='admin').exists() or User.objects.create_superuser('admin', 'admin@example.com', 'admin')" | awx-manage shell
        env:
        - name: DATABASE_USER
          value: awx
        - name: DATABASE_NAME
          value: awx
        - name: DATABASE_HOST
          value: awx-postgres-13
        - name: DATABASE_PORT
          value: "5432"
        - name: DATABASE_PASSWORD
          value: awxpass
        - name: REDIS_HOST
          value: awx-redis
        - name: REDIS_PORT
          value: "6379"
        - name: SECRET_KEY
          value: "awxsecret123456789012345678901234567890"
        volumeMounts:
        - name: awx-projects
          mountPath: /var/lib/awx/projects
      containers:
      - name: awx-web
        image: quay.io/ansible/awx:23.5.1
        command: ["/usr/bin/launch_awx.sh"]
        ports:
        - containerPort: 8052
        env:
        - name: DATABASE_USER
          value: awx
        - name: DATABASE_NAME
          value: awx
        - name: DATABASE_HOST
          value: awx-postgres-13
        - name: DATABASE_PORT
          value: "5432"
        - name: DATABASE_PASSWORD
          value: awxpass
        - name: REDIS_HOST
          value: awx-redis
        - name: REDIS_PORT
          value: "6379"
        - name: SECRET_KEY
          value: "awxsecret123456789012345678901234567890"
        - name: AWX_ADMIN_USER
          value: admin
        - name: AWX_ADMIN_PASSWORD
          value: admin
        volumeMounts:
        - name: awx-projects
          mountPath: /var/lib/awx/projects
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /
            port: 8052
          initialDelaySeconds: 180
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 8052
          initialDelaySeconds: 120
          periodSeconds: 10
      volumes:
      - name: awx-projects
        persistentVolumeClaim:
          claimName: awx-projects-claim
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: awx-task
  namespace: awx
  labels:
    app.kubernetes.io/name: awx-task
    app.kubernetes.io/instance: awx
    app.kubernetes.io/component: awx
    app.kubernetes.io/part-of: awx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: awx-task
      app.kubernetes.io/instance: awx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: awx-task
        app.kubernetes.io/instance: awx
      annotations:
        configmap/hash: "awx-config-v1"
    spec:
      containers:
      - name: awx-task
        image: quay.io/ansible/awx:23.5.1
        command: ["/usr/bin/launch_awx_task.sh"]
        env:
        - name: DATABASE_USER
          value: awx
        - name: DATABASE_NAME
          value: awx
        - name: DATABASE_HOST
          value: awx-postgres-13
        - name: DATABASE_PORT
          value: "5432"
        - name: DATABASE_PASSWORD
          value: awxpass
        - name: REDIS_HOST
          value: awx-redis
        - name: REDIS_PORT
          value: "6379"
        - name: SECRET_KEY
          value: "awxsecret123456789012345678901234567890"
        - name: AWX_ADMIN_USER
          value: admin
        - name: AWX_ADMIN_PASSWORD
          value: admin
        volumeMounts:
        - name: awx-projects
          mountPath: /var/lib/awx/projects
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1Gi
      volumes:
      - name: awx-projects
        persistentVolumeClaim:
          claimName: awx-projects-claim
---
apiVersion: v1
kind: Service
metadata:
  name: awx-service
  namespace: awx
  labels:
    app.kubernetes.io/name: awx-web
    app.kubernetes.io/instance: awx
spec:
  selector:
    app.kubernetes.io/name: awx-web
    app.kubernetes.io/instance: awx
  ports:
  - port: 80
    targetPort: 8052
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: awx
  namespace: awx
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
spec:
  ingressClassName: nginx
  rules:
  - host: awx.elam.sh
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: awx-service
            port:
              number: 80