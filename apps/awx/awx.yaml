apiVersion: v1
kind: Namespace
metadata:
  name: awx
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: awx
  namespace: awx
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: awx
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints", "persistentvolumeclaims", "events", "configmaps", "secrets"]
  verbs: ["*"]
- apiGroups: ["apps"]
  resources: ["deployments", "daemonsets", "replicasets", "statefulsets"]
  verbs: ["*"]
- apiGroups: ["extensions"]
  resources: ["ingresses"]
  verbs: ["*"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: awx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: awx
subjects:
- kind: ServiceAccount
  name: awx
  namespace: awx
---
apiVersion: v1
kind: Secret
metadata:
  name: awx-admin-password
  namespace: awx
type: Opaque
stringData:
  password: admin
---
apiVersion: v1
kind: Secret
metadata:
  name: awx-postgres-configuration
  namespace: awx
type: Opaque
stringData:
  host: postgres
  port: "5432"
  database: awx
  username: awx
  password: awxpass
  sslmode: prefer
  type: managed
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: awx
data:
  redis.conf: |
    maxmemory 256mb
    maxmemory-policy allkeys-lru
    save ""
    appendonly no
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data
  namespace: awx
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 8Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: awx-projects
  namespace: awx
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 8Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: awx
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
      annotations:
        configmap/hash: "postgres-config-v1"
    spec:
      containers:
      - name: postgres
        image: postgres:13
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: awx
        - name: POSTGRES_USER
          value: awx
        - name: POSTGRES_PASSWORD
          value: awxpass
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 256Mi
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-data
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: awx
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: awx
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
      annotations:
        configmap/hash: "redis-config-v1"
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        command:
        - redis-server
        - /etc/redis/redis.conf
        volumeMounts:
        - name: redis-config
          mountPath: /etc/redis
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: awx
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: awx-web
  namespace: awx
  labels:
    app: awx-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: awx-web
  template:
    metadata:
      labels:
        app: awx-web
      annotations:
        configmap/hash: "awx-config-v1"
    spec:
      serviceAccountName: awx
      containers:
      - name: awx-web
        image: quay.io/ansible/awx:23.5.1
        ports:
        - containerPort: 8052
        env:
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: awx-postgres-configuration
              key: username
        - name: DATABASE_NAME
          valueFrom:
            secretKeyRef:
              name: awx-postgres-configuration
              key: database
        - name: DATABASE_HOST
          valueFrom:
            secretKeyRef:
              name: awx-postgres-configuration
              key: host
        - name: DATABASE_PORT
          valueFrom:
            secretKeyRef:
              name: awx-postgres-configuration
              key: port
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: awx-postgres-configuration
              key: password
        - name: REDIS_HOST
          value: redis
        - name: REDIS_PORT
          value: "6379"
        - name: AWX_ADMIN_USER
          value: admin
        - name: AWX_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: awx-admin-password
              key: password
        - name: SECRET_KEY
          value: "awxsecret123456789012345678901234567890"
        volumeMounts:
        - name: awx-projects
          mountPath: /var/lib/awx/projects
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /
            port: 8052
          initialDelaySeconds: 120
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 8052
          initialDelaySeconds: 60
          periodSeconds: 10
      volumes:
      - name: awx-projects
        persistentVolumeClaim:
          claimName: awx-projects
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: awx-task
  namespace: awx
  labels:
    app: awx-task
spec:
  replicas: 1
  selector:
    matchLabels:
      app: awx-task
  template:
    metadata:
      labels:
        app: awx-task
      annotations:
        configmap/hash: "awx-config-v1"
    spec:
      serviceAccountName: awx
      containers:
      - name: awx-task
        image: quay.io/ansible/awx:23.5.1
        command: ["/usr/bin/launch_awx_task.sh"]
        env:
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: awx-postgres-configuration
              key: username
        - name: DATABASE_NAME
          valueFrom:
            secretKeyRef:
              name: awx-postgres-configuration
              key: database
        - name: DATABASE_HOST
          valueFrom:
            secretKeyRef:
              name: awx-postgres-configuration
              key: host
        - name: DATABASE_PORT
          valueFrom:
            secretKeyRef:
              name: awx-postgres-configuration
              key: port
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: awx-postgres-configuration
              key: password
        - name: REDIS_HOST
          value: redis
        - name: REDIS_PORT
          value: "6379"
        - name: AWX_ADMIN_USER
          value: admin
        - name: AWX_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: awx-admin-password
              key: password
        - name: SECRET_KEY
          value: "awxsecret123456789012345678901234567890"
        volumeMounts:
        - name: awx-projects
          mountPath: /var/lib/awx/projects
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1Gi
      volumes:
      - name: awx-projects
        persistentVolumeClaim:
          claimName: awx-projects
---
apiVersion: v1
kind: Service
metadata:
  name: awx-web
  namespace: awx
spec:
  selector:
    app: awx-web
  ports:
  - port: 80
    targetPort: 8052
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: awx
  namespace: awx
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
spec:
  ingressClassName: nginx
  rules:
  - host: awx.elam.sh
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: awx-web
            port:
              number: 80