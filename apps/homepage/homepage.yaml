apiVersion: v1
kind: Namespace
metadata:
  name: homepage
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: homepage
  namespace: homepage
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: homepage
rules:
  - apiGroups: [""]
    resources: ["namespaces", "pods", "nodes", "services", "persistentvolumes", "persistentvolumeclaims"]
    verbs: ["get", "list"]
  - apiGroups: ["apps"]
    resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
    verbs: ["get", "list"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list"]
  - apiGroups: ["batch"]
    resources: ["jobs", "cronjobs"]
    verbs: ["get", "list"]
  - apiGroups: ["metrics.k8s.io"]
    resources: ["nodes", "pods"]
    verbs: ["get", "list"]
  - nonResourceURLs: ["/version", "/healthz", "/metrics"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: homepage
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: homepage
subjects:
  - kind: ServiceAccount
    name: homepage
    namespace: homepage
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: homepage-config
  namespace: homepage
data:
  settings.yaml: |
    title: "Homelab Dashboard"
    favicon: https://github.com/gethomepage/homepage/raw/main/public/android-chrome-192x192.png
    theme: dark
    color: slate
    headerStyle: boxed
    target: _self
    useEqualHeights: true
    layout:
      Monitoring:
        style: row
        columns: 3
      Infrastructure:
        style: row
        columns: 3
      Management:
        style: row
        columns: 2
      System Health:
        style: row
        columns: 4
      Application Health:
        style: row
        columns: 3

  services.yaml: |
    - Monitoring:
        - Prometheus:
            href: https://prometheus.elam.sh
            description: Metrics Collection & Monitoring
            icon: prometheus.png
            ping: https://prometheus.elam.sh
            widget:
              type: prometheus
              url: https://prometheus.elam.sh
        - Grafana:
            href: https://grafana.elam.sh
            description: Metrics Visualization & Dashboards
            icon: grafana.png
            ping: https://grafana.elam.sh
        - Uptime Kuma:
            href: https://uptime.elam.sh
            description: Service Uptime Monitoring
            icon: uptime-kuma.png
            ping: https://uptime.elam.sh

    - Infrastructure:
        - ArgoCD:
            href: https://argo.elam.sh
            description: GitOps Management
            icon: argo-cd.png
            ping: https://argo.elam.sh
        - Rancher:
            href: https://rancher.elam.sh
            description: Kubernetes Management
            icon: rancher.png
            ping: https://rancher.elam.sh
        - Homepage:
            href: https://homepage.elam.sh
            description: This Dashboard
            icon: homepage.png

    - Management:
        - Node Resources:
            widget:
              type: customapi
              url: https://prometheus.elam.sh/api/v1/query?query=count(kube_node_info)
              mappings:
                - field: data.result.0.value.1
                  label: Nodes Online
                  format: number
                  suffix: " nodes"
        - Pod Status:
            widget:
              type: customapi
              url: https://prometheus.elam.sh/api/v1/query?query=count(kube_pod_info{pod_phase="Running"})
              mappings:
                - field: data.result.0.value.1
                  label: Running Pods
                  format: number
                  suffix: " pods"

    - System Health:
        - CPU Usage:
            widget:
              type: customapi
              url: https://prometheus.elam.sh/api/v1/query?query=round((1 - avg(rate(node_cpu_seconds_total{mode="idle"}[5m]))) * 100, 0.1)
              mappings:
                - field: data.result.0.value.1
                  label: Cluster CPU
                  format: number
                  suffix: "%"
        - Memory Usage:
            widget:
              type: customapi
              url: https://prometheus.elam.sh/api/v1/query?query=round((1 - (avg(node_memory_MemAvailable_bytes) / avg(node_memory_MemTotal_bytes))) * 100, 0.1)
              mappings:
                - field: data.result.0.value.1
                  label: Memory Used
                  format: number
                  suffix: "%"
        - Disk Usage:
            widget:
              type: customapi
              url: https://prometheus.elam.sh/api/v1/query?query=round((1 - avg(node_filesystem_avail_bytes{fstype!="tmpfs"} / node_filesystem_size_bytes{fstype!="tmpfs"})) * 100, 0.1)
              mappings:
                - field: data.result.0.value.1
                  label: Disk Used
                  format: number
                  suffix: "%"
        - Network Traffic:
            widget:
              type: customapi
              url: https://prometheus.elam.sh/api/v1/query?query=round(sum(rate(node_network_receive_bytes_total{device!="lo"}[5m])) / 1024 / 1024, 0.1)
              mappings:
                - field: data.result.0.value.1
                  label: Network In
                  format: number
                  suffix: " MB/s"

    - Application Health:
        - ArgoCD Status:
            widget:
              type: customapi
              url: https://prometheus.elam.sh/api/v1/query?query=up{job="kubernetes-pods",app="argocd-server"}
              mappings:
                - field: data.result.0.value.1
                  label: ArgoCD
                  format: text
                  remap:
                    - value: "1"
                      to: "Online"
                    - value: "0" 
                      to: "Offline"
        - Prometheus Health:
            widget:
              type: customapi
              url: https://prometheus.elam.sh/api/v1/query?query=prometheus_tsdb_head_series
              mappings:
                - field: data.result.0.value.1
                  label: Time Series
                  format: number
                  suffix: " metrics"
        - Container Restarts:
            widget:
              type: customapi
              url: https://prometheus.elam.sh/api/v1/query?query=sum(increase(kube_pod_container_status_restarts_total[24h]))
              mappings:
                - field: data.result.0.value.1
                  label: Restarts 24h
                  format: number
                  suffix: " restarts"

  widgets.yaml: |
    - resources:
        backend: resources
        expanded: true
        cpu: true
        memory: true
        nodes:
          show: true
          cpu: true
          memory: true
          showLabel: true
    - datetime:
        text_size: xl
        format:
          timeStyle: short
          dateStyle: short
          hourCycle: h23
    - openmeteo:
        label: Weather
        latitude: 35.025
        longitude: -89.263
        timezone: America/Chicago
        units: imperial
        cache: 5

  bookmarks.yaml: |
    - Monitoring:
        - Dashboards:
            - abbr: Node
              href: https://grafana.elam.sh/d/rYdddlPWk/node-exporter-full
            - abbr: K8s
              href: https://grafana.elam.sh/d/85a562078cdf77779eaa1add43ccec1e/kubernetes-compute-resources-namespace-pods
            - abbr: Pods
              href: https://grafana.elam.sh/d/6417/kubernetes-pod-monitoring
            - abbr: Uptime
              href: https://uptime.elam.sh/dashboard
    - Quick Links:
        - Homelab:
            - abbr: Prom
              href: https://prometheus.elam.sh/targets
            - abbr: Graf
              href: https://grafana.elam.sh/dashboards
            - abbr: Argo
              href: https://argo.elam.sh/applications
            - abbr: Status
              href: https://uptime.elam.sh/status
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: homepage-config
  namespace: homepage
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: homepage
  namespace: homepage
  labels:
    app: homepage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: homepage
  template:
    metadata:
      labels:
        app: homepage
    spec:
      serviceAccountName: homepage
      containers:
      - name: homepage
        image: ghcr.io/gethomepage/homepage:latest
        ports:
        - containerPort: 3000
        env:
        - name: HOMEPAGE_CONFIG_DIR
          value: /app/config
        - name: HOMEPAGE_ALLOWED_HOSTS
          value: "*"
        - name: LOG_LEVEL
          value: debug
        - name: HOMEPAGE_VAR_TITLE
          value: "Homelab Dashboard"
        volumeMounts:
        - name: config
          mountPath: /app/config
        - name: config-files
          mountPath: /app/config/settings.yaml
          subPath: settings.yaml
        - name: config-files
          mountPath: /app/config/services.yaml
          subPath: services.yaml
        - name: config-files
          mountPath: /app/config/widgets.yaml
          subPath: widgets.yaml
        - name: config-files
          mountPath: /app/config/bookmarks.yaml
          subPath: bookmarks.yaml
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: homepage-config
      - name: config-files
        configMap:
          name: homepage-config
---
apiVersion: v1
kind: Service
metadata:
  name: homepage
  namespace: homepage
spec:
  selector:
    app: homepage
  ports:
  - port: 80
    targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: homepage
  namespace: homepage
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-set-headers: "homepage/homepage-headers"
spec:
  ingressClassName: nginx
  rules:
  - host: homepage.elam.sh
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: homepage
            port:
              number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: homepage-headers
  namespace: homepage
data:
  X-Forwarded-Proto: https
  X-Forwarded-Host: homepage.elam.sh