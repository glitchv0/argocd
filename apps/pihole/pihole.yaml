apiVersion: v1
kind: Namespace
metadata:
  name: pihole
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-data
  namespace: pihole
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: pihole-secret
  namespace: pihole
type: Opaque
data:
  # Default admin password is 'admin' - change this!
  # echo -n 'admin' | base64
  admin-password: YWRtaW4=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
  namespace: pihole
  labels:
    app: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      containers:
      - name: pihole
        image: pihole/pihole:latest
        ports:
        - containerPort: 80
        - containerPort: 53
          protocol: UDP
        - containerPort: 53
          protocol: TCP
        env:
        - name: TZ
          value: "America/Chicago"
        - name: WEBPASSWORD
          valueFrom:
            secretKeyRef:
              name: pihole-secret
              key: admin-password
        - name: FTLCONF_LOCAL_IPV4
          value: "192.168.1.100"
        - name: PIHOLE_DNS_
          value: "1.1.1.1;8.8.8.8"
        - name: DNSMASQ_LISTENING
          value: "all"
        volumeMounts:
        - name: pihole-data
          mountPath: /etc/pihole
        - name: pihole-dnsmasq
          mountPath: /etc/dnsmasq.d
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /admin
            port: 80
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /admin
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: pihole-data
        persistentVolumeClaim:
          claimName: pihole-data
      - name: pihole-dnsmasq
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-web
  namespace: pihole
  labels:
    app: pihole
spec:
  selector:
    app: pihole
  ports:
  - name: http
    port: 80
    targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-dns
  namespace: pihole
  labels:
    app: pihole
spec:
  type: LoadBalancer
  selector:
    app: pihole
  ports:
  - name: dns-tcp
    port: 53
    targetPort: 53
    protocol: TCP
  - name: dns-udp
    port: 53
    targetPort: 53
    protocol: UDP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pihole
  namespace: pihole
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  ingressClassName: nginx
  rules:
  - host: pihole.elam.sh
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: pihole-web
            port:
              number: 80